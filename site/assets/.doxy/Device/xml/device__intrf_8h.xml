<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="device__intrf_8h" kind="file" language="C++">
    <compoundname>device_intrf.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">stdbool.h</includes>
    <includes local="no">stdatomic.h</includes>
    <includedby refid="device_8h" local="yes">include/device.h</includedby>
    <incdepgraph>
      <node id="1">
        <label>include/device_intrf.h</label>
        <link refid="device__intrf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>stdatomic.h</label>
      </node>
      <node id="3">
        <label>stdbool.h</label>
      </node>
      <node id="2">
        <label>stdint.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>include/device.h</label>
        <link refid="device_8h"/>
      </node>
      <node id="1">
        <label>include/device_intrf.h</label>
        <link refid="device__intrf_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct____device__intrf" prot="public">__device_intrf</innerclass>
    <sectiondef kind="enum">
      <member refid="group__device__intrf_1gaf4485d6e89060a99145de3e773dbd006" kind="enum"><name>DEVINTRF_EVT</name></member>
      <member refid="group__device__intrf_1ga9612b427565732d1688556e3c68e1a63" kind="enum"><name>__Dev_Intrf_Type</name></member>
    </sectiondef>
    <sectiondef kind="typedef">
      <member refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" kind="typedef"><name>DEVINTRF_TYPE</name></member>
      <member refid="group__device__intrf_1ga4ec1d3a7535b4a8dccf41debd670f5f9" kind="typedef"><name>DevIntrf_t</name></member>
      <member refid="group__device__intrf_1ga2d9e41943b4a6c267e8ac472983ac13b" kind="typedef"><name>DevIntrfEvtHandler_t</name></member>
    </sectiondef>
    <sectiondef kind="func">
      <member refid="group__device__intrf_1gaf39f24f6598d90aa3b90e0ba9d8e49c1" kind="function"><name>DeviceIntrfDisable</name></member>
      <member refid="group__device__intrf_1ga57235f4c29e4322cf202534a5f93b4ac" kind="function"><name>DeviceIntrfEnable</name></member>
      <member refid="group__device__intrf_1ga20bff38dba1ed735f80516bf183db2e5" kind="function"><name>DeviceIntrfGetRate</name></member>
      <member refid="group__device__intrf_1gaf699adc18397c79b539494cac94162ef" kind="function"><name>DeviceIntrfSetRate</name></member>
      <member refid="group__device__intrf_1gaaf3ca84c9b06710c8eae6270da8f9a17" kind="function"><name>DeviceIntrfRx</name></member>
      <member refid="group__device__intrf_1ga69db17fb3d558cb46968b98e75caae99" kind="function"><name>DeviceIntrfTx</name></member>
      <member refid="group__device__intrf_1ga2813f209b1f406a8ad17a514d4c7bb8d" kind="function"><name>DeviceIntrfTxComplete</name></member>
      <member refid="group__device__intrf_1ga4c9348ae8aaaec7e97819331f9ab63c2" kind="function"><name>DeviceIntrfRead</name></member>
      <member refid="group__device__intrf_1ga380390f878da911e0d9979d68a941eac" kind="function"><name>DeviceIntrfWrite</name></member>
      <member refid="group__device__intrf_1ga237b13059151f680c5452b6091462e9b" kind="function"><name>DeviceIntrfStartRx</name></member>
      <member refid="group__device__intrf_1ga942e35c8b253d79e84aaf1c1cdf13953" kind="function"><name>DeviceIntrfRxData</name></member>
      <member refid="group__device__intrf_1ga805c57aa553519d480abf49ac38f1359" kind="function"><name>DeviceIntrfStopRx</name></member>
      <member refid="group__device__intrf_1ga59a6344aaea3e06592a7d0ec5ef41327" kind="function"><name>DeviceIntrfStartTx</name></member>
      <member refid="group__device__intrf_1ga4cb8e4d834320273ba7ff16c0f4f8df4" kind="function"><name>DeviceIntrfTxData</name></member>
      <member refid="group__device__intrf_1gae67db85403a8e3291fbca96db1c84161" kind="function"><name>DeviceIntrfStopTx</name></member>
      <member refid="group__device__intrf_1gadb5891c23ae1d672a2a348515b661ece" kind="function"><name>DeviceIntrfReset</name></member>
      <member refid="group__device__intrf_1ga257c24b8a93968d1b904602360920f20" kind="function"><name>DeviceIntrfPowerOff</name></member>
      <member refid="group__device__intrf_1ga9c03fed67bed4d8346208fa7dd4a00e7" kind="function"><name>DeviceIntrfGetType</name></member>
      <member refid="group__device__intrf_1ga9e5bb4590705985c0aae40fd93e1649b" kind="function"><name>DeviceIntrfGetHandle</name></member>
    </sectiondef>
    <briefdescription>
<para>Generic data transfer interface class. </para>
    </briefdescription>
    <detaileddescription>
<para><hruler/>
</para>
<para>This class is used to implement device communication interfaces such as I2C, UART, etc... Not limited to wired or physical interface. It could be soft interface as well such as SLIP protocol or any mean of transferring data between 2 entities.</para>
<para><simplesect kind="author"><para>Hoang Nguyen Hoan </para>
</simplesect>
<simplesect kind="date"><para>Nov. 25, 2011</para>
</simplesect>
@license</para>
<para>Copyright (c) 2011, I-SYST inc., all rights reserved</para>
<para>Permission to use, copy, modify, and distribute this software for any purpose with or without fee is hereby granted, provided that the above copyright notice and this permission notice appear in all copies, and none of the names : I-SYST or its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</para>
<para>For info or contributing contact : hnhoan at i-syst dot com</para>
<para>THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS `<lsquo/>AS IS<rsquo/>&apos; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</para>
<para><hruler/>
 </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__DEVICEINTRF_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__DEVICEINTRF_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdbool.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdatomic.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="group__device__intrf_1gaf4485d6e89060a99145de3e773dbd006" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="57" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a7c83015972461c2cdb94fa87357eed35" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a7c83015972461c2cdb94fa87357eed35" kindref="member">DEVINTRF_EVT_RX_TIMEOUT</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="58" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006abe5547c21d61ae4a683eb8340a4cd613" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006abe5547c21d61ae4a683eb8340a4cd613" kindref="member">DEVINTRF_EVT_RX_DATA</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a1e0dc5ad7c9080f8741c75e62ca9599b" kindref="member">DEVINTRF_EVT_RX_FIFO_FULL</ref>,<sp/><sp/></highlight></codeline>
<codeline lineno="61" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a842959e64f10a316c81cce45fd0b7fd4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a842959e64f10a316c81cce45fd0b7fd4" kindref="member">DEVINTRF_EVT_TX_TIMEOUT</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a6551bc54a6f30ac6ab0386dd53f7a30d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a6551bc54a6f30ac6ab0386dd53f7a30d" kindref="member">DEVINTRF_EVT_TX_READY</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="63" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006ac31166e00ad4b96dfc7373e8392f361e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006ac31166e00ad4b96dfc7373e8392f361e" kindref="member">DEVINTRF_EVT_TX_FIFO_EMPTY</ref>,<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a26351da498fd6805aa5227e03d0140c5" kindref="member">DEVINTRF_EVT_STATECHG</ref>,<sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a4166d3ec97a6872f4fc122744ed029bb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a4166d3ec97a6872f4fc122744ed029bb" kindref="member">DEVINTRF_EVT_READ_RQST</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a9b478ddb12c0f77443a408507d1cedbb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006a9b478ddb12c0f77443a408507d1cedbb" kindref="member">DEVINTRF_EVT_WRITE_RQST</ref>,<sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68" refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006aeda24d115c931927f12dc81c79d586a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ggaf4485d6e89060a99145de3e773dbd006aeda24d115c931927f12dc81c79d586a9" kindref="member">DEVINTRF_EVT_COMPLETED</ref>,<sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal">}<sp/><ref refid="group__device__intrf_1gaf4485d6e89060a99145de3e773dbd006" kindref="member">DEVINTRF_EVT</ref>;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="group__device__intrf_1ga9612b427565732d1688556e3c68e1a63" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga9612b427565732d1688556e3c68e1a63" kindref="member">__Dev_Intrf_Type</ref><sp/>{</highlight></codeline>
<codeline lineno="73" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63afc8bda9988c586b70055e5bc5a88f8bd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63afc8bda9988c586b70055e5bc5a88f8bd" kindref="member">DEVINTRF_TYPE_UNKOWN</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="74" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a9099c97494992393d494099b6af5cebc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a9099c97494992393d494099b6af5cebc" kindref="member">DEVINTRF_TYPE_BT</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="75" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63abe5134ccd0b52a9fab2907adbab817c0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63abe5134ccd0b52a9fab2907adbab817c0" kindref="member">DEVINTRF_TYPE_ETH</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a1ee642910dc12e4b4c43e0d54066c353" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a1ee642910dc12e4b4c43e0d54066c353" kindref="member">DEVINTRF_TYPE_I2C</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="77" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63aba95de45a65d39b1fc05f7b31f1e5be7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63aba95de45a65d39b1fc05f7b31f1e5be7" kindref="member">DEVINTRF_TYPE_CEL</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="78" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a9a462e4be04633e39f0b12f660167eb2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a9a462e4be04633e39f0b12f660167eb2" kindref="member">DEVINTRF_TYPE_SPI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="79" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a03cd4e9c2ef3fceaea2e9f1550c3fcc5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a03cd4e9c2ef3fceaea2e9f1550c3fcc5" kindref="member">DEVINTRF_TYPE_QSPI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="80" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a02c8b52ecb94b75255a29c52f416623a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a02c8b52ecb94b75255a29c52f416623a" kindref="member">DEVINTRF_TYPE_UART</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="81" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63ad0b70e635f4c99be62249495f9056748" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63ad0b70e635f4c99be62249495f9056748" kindref="member">DEVINTRF_TYPE_USB</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="82" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a467c325ef115cc55650d4c2ba69d88c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a467c325ef115cc55650d4c2ba69d88c3" kindref="member">DEVINTRF_TYPE_WIFI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="83" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63ae7ce2cecc77ccb1fd216896bf15846ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63ae7ce2cecc77ccb1fd216896bf15846ea" kindref="member">DEVINTRF_TYPE_I2S</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="84" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a8f4d476d32c2bdc1c22f128f4ab41a70" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a8f4d476d32c2bdc1c22f128f4ab41a70" kindref="member">DEVINTRF_TYPE_PDM</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="85" refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a88dcb7fbabaf2339743f7f0ad89c295a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1gga9612b427565732d1688556e3c68e1a63a88dcb7fbabaf2339743f7f0ad89c295a" kindref="member">DEVINTRF_TYPE_OSPI</ref>,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="86" refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" refkind="member"><highlight class="normal">}<sp/><ref refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" kindref="member">DEVINTRF_TYPE</ref>;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="group__device__intrf_1ga4ec1d3a7535b4a8dccf41debd670f5f9" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____device__intrf" kindref="compound">__device_intrf</ref><sp/><ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="115" refid="group__device__intrf_1ga2d9e41943b4a6c267e8ac472983ac13b" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group__device__intrf_1ga2d9e41943b4a6c267e8ac472983ac13b" kindref="member">DevIntrfEvtHandler_t</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/><ref refid="group__device__intrf_1gaf4485d6e89060a99145de3e773dbd006" kindref="member">DEVINTRF_EVT</ref><sp/>EvtId,<sp/>uint8_t<sp/>*pBuffer,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Len);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>4)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="struct____device__intrf" refkind="compound"><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct____device__intrf" kindref="compound">__device_intrf</ref><sp/>{</highlight></codeline>
<codeline lineno="129" refid="struct____device__intrf_1aee6dc445ec6ec513a994409f86e29b03" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="struct____device__intrf_1aee6dc445ec6ec513a994409f86e29b03" kindref="member">pDevData</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="130" refid="struct____device__intrf_1a31161ac02fd7ac0848dca85ce186d04c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct____device__intrf_1a31161ac02fd7ac0848dca85ce186d04c" kindref="member">IntPrio</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="131" refid="struct____device__intrf_1af5761267153c932fc8e755e620787b46" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ga2d9e41943b4a6c267e8ac472983ac13b" kindref="member">DevIntrfEvtHandler_t</ref><sp/><ref refid="struct____device__intrf_1af5761267153c932fc8e755e620787b46" kindref="member">EvtCB</ref>;<sp/></highlight></codeline>
<codeline lineno="132" refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_flag<sp/><ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="133" refid="struct____device__intrf_1a231802f30134b71fa87b9a6c8e96a6a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct____device__intrf_1a231802f30134b71fa87b9a6c8e96a6a8" kindref="member">MaxRetry</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="134" refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_int<sp/><ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="137" refid="struct____device__intrf_1a186c1337cebb430f3ae8ae55b5188f50" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" kindref="member">DEVINTRF_TYPE</ref><sp/><ref refid="struct____device__intrf_1a186c1337cebb430f3ae8ae55b5188f50" kindref="member">Type</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="138" refid="struct____device__intrf_1a07c9dda8b7687e6c6cd23fb855004bbd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct____device__intrf_1a07c9dda8b7687e6c6cd23fb855004bbd" kindref="member">bDma</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="139" refid="struct____device__intrf_1a8d97af8c6caa28fdcaf9c716ebbafbf8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="struct____device__intrf_1a8d97af8c6caa28fdcaf9c716ebbafbf8" kindref="member">bIntEn</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="140" refid="struct____device__intrf_1ae690f670ac02b0f5570cb100aaefe7e3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_bool<sp/><ref refid="struct____device__intrf_1ae690f670ac02b0f5570cb100aaefe7e3" kindref="member">bTxReady</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="141" refid="struct____device__intrf_1a50e21f227755ae9c62abd459ddce6faa" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_bool<sp/><ref refid="struct____device__intrf_1a50e21f227755ae9c62abd459ddce6faa" kindref="member">bNoStop</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Bellow<sp/>are<sp/>all<sp/>mandatory<sp/>functions<sp/>to<sp/>implement</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>init,<sp/>all<sp/>implementation<sp/>must<sp/>fill<sp/>these<sp/>function,<sp/>no<sp/>NULL<sp/>allowed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>a<sp/>function<sp/>is<sp/>not<sp/>used.<sp/>It<sp/>must<sp/>be<sp/>implemented<sp/>as<sp/>do<sp/>nothing<sp/>function</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="struct____device__intrf_1a2cc1893c825868c29781fa60dbfbbf19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1a2cc1893c825868c29781fa60dbfbbf19" kindref="member">Disable</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="164" refid="struct____device__intrf_1ab5e105b4db1f9d6c240b653dd07aeba0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1ab5e105b4db1f9d6c240b653dd07aeba0" kindref="member">Enable</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="175" refid="struct____device__intrf_1a3b560c6b3450ab6d815cb83a63f39641" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>(*<ref refid="struct____device__intrf_1a3b560c6b3450ab6d815cb83a63f39641" kindref="member">GetRate</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="struct____device__intrf_1a5068880640684e6919ff5fe5b14242eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>(*<ref refid="struct____device__intrf_1a5068880640684e6919ff5fe5b14242eb" kindref="member">SetRate</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint32_t<sp/>Rate);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="202" refid="struct____device__intrf_1a32f91db3dc4e9728c5885dd9348f8496" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="struct____device__intrf_1a32f91db3dc4e9728c5885dd9348f8496" kindref="member">StartRx</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint32_t<sp/>DevAddr);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="219" refid="struct____device__intrf_1aabf495aca1c3de95b01b5299c84cd4ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct____device__intrf_1aabf495aca1c3de95b01b5299c84cd4ab" kindref="member">RxData</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen);</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="228" refid="struct____device__intrf_1abd049e2b5c99cca15cabb3d85e376dc2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1abd049e2b5c99cca15cabb3d85e376dc2" kindref="member">StopRx</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight></codeline>
<codeline lineno="242" refid="struct____device__intrf_1afe9bd24880dcc7135c6b26379e757083" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>bool<sp/>(*<ref refid="struct____device__intrf_1afe9bd24880dcc7135c6b26379e757083" kindref="member">StartTx</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint32_t<sp/>DevAddr);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="254" refid="struct____device__intrf_1abf29bb5dc5ecf484d11736cb05642c4e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct____device__intrf_1abf29bb5dc5ecf484d11736cb05642c4e" kindref="member">TxData</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen);</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="270" refid="struct____device__intrf_1ab351bfb21d19496abcafa1c498b4f488" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>int<sp/>(*<ref refid="struct____device__intrf_1ab351bfb21d19496abcafa1c498b4f488" kindref="member">TxSrData</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="279" refid="struct____device__intrf_1a343de68346eda1f204bda10f4c2c80fd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1a343de68346eda1f204bda10f4c2c80fd" kindref="member">StopTx</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="287" refid="struct____device__intrf_1ac1b9ea451b8b83414eeb7573c5d99d93" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1ac1b9ea451b8b83414eeb7573c5d99d93" kindref="member">Reset</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight></codeline>
<codeline lineno="299" refid="struct____device__intrf_1a30cf003eaa0091d4a3d44c7290987688" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct____device__intrf_1a30cf003eaa0091d4a3d44c7290987688" kindref="member">PowerOff</ref>)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*(*GetHandle)(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDevIntrf);</highlight></codeline>
<codeline lineno="302"><highlight class="normal">};</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfDisable(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic_exchange(&amp;pDev-&gt;<ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref>,<sp/>pDev-&gt;<ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref><sp/>-<sp/>1)<sp/>&lt;<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(--pDev-&gt;EnCnt<sp/>&lt;<sp/>1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a2cc1893c825868c29781fa60dbfbbf19" kindref="member">Disable</ref>(pDev);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref><sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal">}</highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfEnable(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic_exchange(&amp;pDev-&gt;<ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref>,<sp/>pDev-&gt;<ref refid="struct____device__intrf_1a0b3b6504d0723f1d8f4b7d8152210fb7" kindref="member">EnCnt</ref><sp/>+<sp/>1)<sp/>==<sp/>1)<sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="comment">//<sp/><sp/>if<sp/>(++pDev-&gt;EnCnt<sp/>==<sp/>1)<sp/>{</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1ab5e105b4db1f9d6c240b653dd07aeba0" kindref="member">Enable</ref>(pDev);</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="337"><highlight class="normal">}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>DeviceIntrfGetRate(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a3b560c6b3450ab6d815cb83a63f39641" kindref="member">GetRate</ref>(pDev);</highlight></codeline>
<codeline lineno="350"><highlight class="normal">}</highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/>uint32_t<sp/>DeviceIntrfSetRate(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>Rate)<sp/>{</highlight></codeline>
<codeline lineno="366"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a5068880640684e6919ff5fe5b14242eb" kindref="member">SetRate</ref>(pDev,<sp/>Rate);</highlight></codeline>
<codeline lineno="367"><highlight class="normal">}</highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight></codeline>
<codeline lineno="381" refid="group__device__intrf_1gaaf3ca84c9b06710c8eae6270da8f9a17" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1gaaf3ca84c9b06710c8eae6270da8f9a17" kindref="member">DeviceIntrfRx</ref>(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen);</highlight></codeline>
<codeline lineno="382"><highlight class="normal"></highlight></codeline>
<codeline lineno="395" refid="group__device__intrf_1ga69db17fb3d558cb46968b98e75caae99" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga69db17fb3d558cb46968b98e75caae99" kindref="member">DeviceIntrfTx</ref>(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"></highlight></codeline>
<codeline lineno="404" refid="group__device__intrf_1ga2813f209b1f406a8ad17a514d4c7bb8d" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga2813f209b1f406a8ad17a514d4c7bb8d" kindref="member">DeviceIntrfTxComplete</ref>(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev);</highlight></codeline>
<codeline lineno="405"><highlight class="normal"></highlight></codeline>
<codeline lineno="421" refid="group__device__intrf_1ga4c9348ae8aaaec7e97819331f9ab63c2" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga4c9348ae8aaaec7e97819331f9ab63c2" kindref="member">DeviceIntrfRead</ref>(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pAdCmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdCmdLen,</highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*pRxBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RxLen);</highlight></codeline>
<codeline lineno="423"><highlight class="normal"></highlight></codeline>
<codeline lineno="439" refid="group__device__intrf_1ga380390f878da911e0d9979d68a941eac" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga380390f878da911e0d9979d68a941eac" kindref="member">DeviceIntrfWrite</ref>(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pAdCmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdCmdLen,</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen);</highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DeviceIntrfStartRx(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr)<sp/>{</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic_flag_test_and_set(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>))</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/>pDev-&gt;<ref refid="struct____device__intrf_1a32f91db3dc4e9728c5885dd9348f8496" kindref="member">StartRx</ref>(pDev,<sp/>DevAddr);</highlight></codeline>
<codeline lineno="462"><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>returned<sp/>false,<sp/>app<sp/>would<sp/>not<sp/>call<sp/>Stop<sp/>to<sp/>release<sp/>busy<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>do<sp/>that<sp/>here<sp/>before<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomic_flag_clear(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="468"><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="470"><highlight class="normal">}</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DeviceIntrfRxData(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen)<sp/>{</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;<ref refid="struct____device__intrf_1aabf495aca1c3de95b01b5299c84cd4ab" kindref="member">RxData</ref>(pDev,<sp/>pBuff,<sp/>BuffLen);</highlight></codeline>
<codeline lineno="489"><highlight class="normal">}</highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight></codeline>
<codeline lineno="499"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfStopRx(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1abd049e2b5c99cca15cabb3d85e376dc2" kindref="member">StopRx</ref>(pDev);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_flag_clear(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>);</highlight></codeline>
<codeline lineno="502"><highlight class="normal">}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Initiate<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="comment">//<sp/>WARNING<sp/>this<sp/>function<sp/>must<sp/>be<sp/>used<sp/>in<sp/>pair<sp/>with<sp/>StopTx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Re-entrance<sp/>protection<sp/>flag<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507"><highlight class="normal"></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>StopTx<sp/>must<sp/>be<sp/>after<sp/>transmission<sp/>is<sp/>completed<sp/>to<sp/>release<sp/>flag</highlight></codeline>
<codeline lineno="523"><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>DeviceIntrfStartTx(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint32_t<sp/>DevAddr)<sp/>{</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(atomic_flag_test_and_set(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>))</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"></highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>retval<sp/>=<sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1afe9bd24880dcc7135c6b26379e757083" kindref="member">StartTx</ref>(pDev,<sp/>DevAddr);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>In<sp/>case<sp/>of<sp/>returned<sp/>false,<sp/>app<sp/>would<sp/>not<sp/>call<sp/>Stop<sp/>to<sp/>release<sp/>busy<sp/>flag</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>so<sp/>we<sp/>need<sp/>to<sp/>do<sp/>that<sp/>here<sp/>before<sp/>returning</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(retval<sp/>==<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>atomic_flag_clear(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>);</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="536"><highlight class="normal">}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DeviceIntrfTxData(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen)<sp/>{</highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;<ref refid="struct____device__intrf_1abf29bb5dc5ecf484d11736cb05642c4e" kindref="member">TxData</ref>(pDev,<sp/>pData,<sp/>DataLen);</highlight></codeline>
<codeline lineno="550"><highlight class="normal">}</highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfStopTx(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a343de68346eda1f204bda10f4c2c80fd" kindref="member">StopTx</ref>(pDev);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/>atomic_flag_clear(&amp;pDev-&gt;<ref refid="struct____device__intrf_1afa4b5044c0f05de1ce2f68bfa4da4450" kindref="member">bBusy</ref>);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfReset(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDev-&gt;<ref refid="struct____device__intrf_1ac1b9ea451b8b83414eeb7573c5d99d93" kindref="member">Reset</ref>)</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pDev-&gt;<ref refid="struct____device__intrf_1ac1b9ea451b8b83414eeb7573c5d99d93" kindref="member">Reset</ref>(pDev);</highlight></codeline>
<codeline lineno="574"><highlight class="normal">}</highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>DeviceIntrfPowerOff(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(pDev-&gt;<ref refid="struct____device__intrf_1a30cf003eaa0091d4a3d44c7290987688" kindref="member">PowerOff</ref>)<sp/>pDev-&gt;<ref refid="struct____device__intrf_1a30cf003eaa0091d4a3d44c7290987688" kindref="member">PowerOff</ref>(pDev);</highlight></codeline>
<codeline lineno="588"><highlight class="normal">}</highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" kindref="member">DEVINTRF_TYPE</ref><sp/>DeviceIntrfGetType(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;<ref refid="struct____device__intrf_1a186c1337cebb430f3ae8ae55b5188f50" kindref="member">Type</ref>;</highlight></codeline>
<codeline lineno="597"><highlight class="normal">}</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight></codeline>
<codeline lineno="599"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*DeviceIntrfGetHandle(<ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>pDev)<sp/>{</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>pDev-&gt;GetHandle(pDev);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal">}</highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="keyword">class<sp/></highlight><highlight class="normal">DeviceIntrf<sp/>{</highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/><ref refid="struct____device__intrf" kindref="compound">DevIntrf_t</ref><sp/>*<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>()<sp/>=<sp/>0;<sp/></highlight><highlight class="comment">//<sp/>Get<sp/>device<sp/>interface<sp/>data<sp/>(handle)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga516997d784c793ac41d8be424090aa0e" kindref="member">DEVINTRF_TYPE</ref><sp/>Type()<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>DeviceIntrfGetType(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="629"><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint32_t<sp/>Rate(uint32_t<sp/>DataRate)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>uint32_t<sp/>Rate(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Disable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>DeviceIntrfDisable(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="663"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Enable(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>DeviceIntrfEnable(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>PowerOff()<sp/>{<sp/>DeviceIntrfPowerOff(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="678"><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Rx(uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen)<sp/>{</highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1gaaf3ca84c9b06710c8eae6270da8f9a17" kindref="member">DeviceIntrfRx</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,DevAddr,<sp/>pBuff,<sp/>BuffLen);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Tx(uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen)<sp/>{</highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga69db17fb3d558cb46968b98e75caae99" kindref="member">DeviceIntrfTx</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>DevAddr,<sp/>pData,<sp/>DataLen);</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Read(uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pAdCmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdCmdLen,<sp/>uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen)<sp/>{</highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga4c9348ae8aaaec7e97819331f9ab63c2" kindref="member">DeviceIntrfRead</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>DevAddr,<sp/>pAdCmd,<sp/>AdCmdLen,<sp/>pBuff,<sp/>BuffLen);</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Write(uint32_t<sp/>DevAddr,<sp/>uint8_t<sp/>*pAdCmd,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>AdCmdLen,<sp/>uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen)<sp/>{</highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="group__device__intrf_1ga380390f878da911e0d9979d68a941eac" kindref="member">DeviceIntrfWrite</ref>(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">,<sp/>DevAddr,<sp/>pAdCmd,<sp/>AdCmdLen,<sp/>pData,<sp/>DataLen);</highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initiate<sp/>receive</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="746"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>this<sp/>function<sp/>must<sp/>be<sp/>used<sp/>in<sp/>pair<sp/>with<sp/>StopRx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-entrance<sp/>protection<sp/>flag<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>StopRx<sp/>must<sp/>be<sp/>after<sp/>transmission<sp/>is<sp/>completed<sp/>to<sp/>release<sp/>flag</highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartRx(uint32_t<sp/>DevAddr)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="765"><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>RxData(uint8_t<sp/>*pBuff,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>BuffLen)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight></codeline>
<codeline lineno="792"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StopRx(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initiate<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>this<sp/>function<sp/>must<sp/>be<sp/>used<sp/>in<sp/>pair<sp/>with<sp/>StopTx</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Re-entrance<sp/>protection<sp/>flag<sp/>is<sp/>used</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>On<sp/>success,<sp/>StopTx<sp/>must<sp/>be<sp/>after<sp/>transmission<sp/>is<sp/>completed<sp/>to<sp/>release<sp/>flag</highlight></codeline>
<codeline lineno="813"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>StartTx(uint32_t<sp/>DevAddr)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="814"><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>TxData(uint8_t<sp/>*pData,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>DataLen)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="825"><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stop<sp/>transmit</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="827"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>WARNING<sp/>!!!!!</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>This<sp/>functions<sp/>MUST<sp/>ONLY<sp/>be<sp/>called<sp/>if<sp/>StartTx<sp/>returns<sp/>true.</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>StopTx(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>RequestToSend(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>NbBytes)<sp/>{<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;<sp/>}</highlight></codeline>
<codeline lineno="841"><highlight class="normal"></highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>Reset(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">)<sp/>{<sp/>DeviceIntrfReset(*</highlight><highlight class="keyword">this</highlight><highlight class="normal">);<sp/>}</highlight></codeline>
<codeline lineno="846"><highlight class="normal">};</highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight></codeline>
<codeline lineno="848"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"></highlight></codeline>
<codeline lineno="852"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/><sp/></highlight><highlight class="comment">//<sp/>__DEVICEINTRF_H__</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/device_intrf.h"/>
  </compounddef>
</doxygen>
